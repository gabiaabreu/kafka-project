services:
  kafka:
    image: apache/kafka:latest
    restart: on-failure
    ports:
      - 9092:9092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3

  kafka-init:
    image: apache/kafka:latest
    depends_on:
      - kafka
    command: >
      bash -c "
        sleep 10;
        echo 'Criando tópicos store-topic e payment-topic'
        /opt/kafka/bin/kafka-topics.sh kafka-topics.sh --create --if-not-exists --topic store-topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        /opt/kafka/bin/kafka-topics.sh kafka-topics.sh --create --if-not-exists --topic payment-topic --bootstrap-server kafka:9092 --partitions 1 --replication-factor 1 &&
        echo 'Listando todos os tópicos existentes:'
        /opt/kafka/bin/kafka-topics.sh --list --bootstrap-server kafka:9092
      "

  storeservice:
    build: ./store-service
    container_name: store-ms
    ports:
      - "8081:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  paymentservice:
    build: ./payment-service
    container_name: payment-ms
    ports:
      - "8082:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka

  postgres-db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_USER: gabi
      POSTGRES_PASSWORD: senhaforte
      POSTGRES_DB: storedb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8083:8080

volumes:
  postgres-data:
    driver: local